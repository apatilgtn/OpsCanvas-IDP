{"ast":null,"code":"import{useEffect,useRef}from'react';export const useClickOutside=handler=>{const ref=useRef();useEffect(()=>{const handleClickOutside=event=>{if(ref.current&&!ref.current.contains(event.target)){handler();}};// Add event listener when the component mounts\ndocument.addEventListener('mousedown',handleClickOutside);// Clean up event listener when component unmounts\nreturn()=>{document.removeEventListener('mousedown',handleClickOutside);};},[handler]);return ref;};","map":{"version":3,"names":["useEffect","useRef","useClickOutside","handler","ref","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener"],"sources":["/home/ubuntu/OpsCanvas-IDP/frontend/src/hooks/useClickOutside.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nexport const useClickOutside = (handler) => {\n  const ref = useRef();\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (ref.current && !ref.current.contains(event.target)) {\n        handler();\n      }\n    };\n\n    // Add event listener when the component mounts\n    document.addEventListener('mousedown', handleClickOutside);\n    \n    // Clean up event listener when component unmounts\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [handler]);\n\n  return ref;\n};"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAEzC,MAAO,MAAM,CAAAC,eAAe,CAAIC,OAAO,EAAK,CAC1C,KAAM,CAAAC,GAAG,CAAGH,MAAM,CAAC,CAAC,CAEpBD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAK,kBAAkB,CAAIC,KAAK,EAAK,CACpC,GAAIF,GAAG,CAACG,OAAO,EAAI,CAACH,GAAG,CAACG,OAAO,CAACC,QAAQ,CAACF,KAAK,CAACG,MAAM,CAAC,CAAE,CACtDN,OAAO,CAAC,CAAC,CACX,CACF,CAAC,CAED;AACAO,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAEN,kBAAkB,CAAC,CAE1D;AACA,MAAO,IAAM,CACXK,QAAQ,CAACE,mBAAmB,CAAC,WAAW,CAAEP,kBAAkB,CAAC,CAC/D,CAAC,CACH,CAAC,CAAE,CAACF,OAAO,CAAC,CAAC,CAEb,MAAO,CAAAC,GAAG,CACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}